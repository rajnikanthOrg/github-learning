# ----------------------------------------------------------------------------------------
# File: .github/workflows/azure-client-secret-example.yml
#
# Workflow Name: azure-client-secret-example
#
# Description:
# Demonstrates logging into Azure using a Service Principal that authenticates
# with a client secret stored in GitHub Secrets, instead of OpenID Connect (OIDC).
#
# Purpose:
# - Show how to authenticate Azure CLI commands in GitHub Actions with a secret.
# - Useful when you cannot yet configure Federated Credentials in Azure AD.
#
# Prerequisites:
# 1) Create an Azure Service Principal (App Registration) and record:
#      - Client (Application) ID
#      - Tenant ID
#      - Client Secret
#      - Subscription ID
#    Example CLI command to create one:
#       az ad sp create-for-rbac --name "github-actions-demo" \
#         --role Contributor --scopes /subscriptions/<SUBSCRIPTION_ID>
#    It outputs a JSON object containing those values.
#
# 2) Store these in your repository (or organization) secrets:
#      AZURE_CLIENT_ID
#      AZURE_TENANT_ID
#      AZURE_CLIENT_SECRET
#      AZURE_SUBSCRIPTION_ID
#
# 3) Be sure to grant this Service Principal the correct permissions
#    (for example, Reader or Contributor on your subscription or resource group).
#
# Key Concepts:
# - Uses `azure/login@v2` for authentication.
# - Passes credentials through the `with:` block using secrets.
# - Does not require `id-token: write` permission, since no OIDC token is issued.
#
# Security Notes:
# - The client secret is long-lived; rotate it periodically in Azure AD and GitHub.
# - Avoid echoing or logging secret values in any steps.
# - Prefer OIDC where possible for production scenarios.
#
# Usage:
# - Add the required secrets to your repository.
# - Run this workflow manually.
# - Observe successful Azure CLI authentication in the logs.
#
# ----------------------------------------------------------------------------------------

name: azure-client-secret-example

on:
  workflow_dispatch:            # Manual trigger for demonstration

permissions:
  contents: read

jobs:
  azure-login-secret:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      # Authenticate to Azure using the Service Principal credentials
      - name: Azure login using client secret
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Run a harmless Azure command to confirm authentication
      - name: Verify Azure context
        run: |
          az account show --output table || {
            echo "Azure login failed. Check credentials and permissions."
            exit 1
          }

      # Example of executing additional Azure commands
      - name: Example list resource groups
        run: |
          az group list --output table